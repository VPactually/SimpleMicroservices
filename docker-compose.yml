# docker-compose.yml
services:
  eureka-server:
    container_name: eureka-server
    restart: always
    build: ./eureka-server
    ports:
      - "8761:8761"

  order-service:
    container_name: order-service
    restart: always
    build: ./order-service
    depends_on:
      - eureka-server
      - kafka
      - zookeeper
    links:
      - kafka
      - eureka-server

  payment-service:
    container_name: payment-service
    restart: always
    build: ./payment-service
    depends_on:
      - eureka-server
      - kafka
      - zookeeper
    links:
      - kafka
      - eureka-server

  restaurant-service:
    container_name: restaurant-service
    restart: always
    build: ./restaurant-service
    depends_on:
      - eureka-server
      - kafka
      - zookeeper
    links:
      - kafka
      - eureka-server

  delivery-service:
    container_name: delivery-service
    restart: always
    build: ./delivery-service
    depends_on:
      - eureka-server
      - kafka
      - zookeeper
    links:
      - kafka
      - eureka-server

  api-gateway:
    container_name: api-gateway
    restart: always
    build: ./api-gateway
    ports:
      - "8765:8765"
    depends_on:
      - eureka-server
      - order-service
      - payment-service
      - restaurant-service
      - delivery-service
      - kafka
    links:
      - eureka-server
      - order-service
      - payment-service

  zookeeper:
    container_name: zookeeper
    restart: always
    image: docker.io/bitnami/zookeeper:3.8
    ports:
      - "2181:2181"
    volumes:
      - "zookeeper-volume:/bitnami"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  kafka:
    container_name: kafka
    restart: always
    image: docker.io/bitnami/kafka:3.3
    ports:
      - "9093:9093"
    volumes:
      - "kafka-volume:/bitnami"
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_LISTENERS=CLIENT://:9091,EXTERNAL://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka:9091,EXTERNAL://kafka:9092
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=CLIENT
    depends_on:
      - zookeeper

#  elasticsearch:
#    image: elasticsearch:7.14.2
#    volumes:
#      - elasticsearch:/usr/share/elasticsearch/data
#    environment:
#      ES_JAVA_OPTS: "-Xmx512m -Xms256m"
#      ELASTIC_PASSWORD: elastic
#      # Use single node discovery in order to disable production mode and avoid bootstrap checks
#      # see https://www.elastic.co/guide/en/elasticsearch/reference/current/bootstrap-checks.html
#      discovery.type: single-node
#      # X-Pack security needs to be enabled for Elasticsearch to actually authenticate requests
#      xpack.security.enabled: "true"
#    ports:
#      - "9200:9200"
#      - "9300:9300"
#    restart: unless-stopped
#
#  # https://www.elastic.co/guide/en/logstash/current/docker-config.html
#  logstash:
#    image: logstash:7.14.2
#    ports:
#      - "5000:5000"
#      - "9600:9600"
#    environment:
#      LS_JAVA_OPTS: "-Xmx512m -Xms256m"
#      ELASTIC_USER: elastic
#      ELASTIC_PASSWORD: elastic
#      XPACK_MONITORING_ELASTICSEARCH_USERNAME: elastic
#      XPACK_MONITORING_ELASTICSEARCH_PASSWORD: elastic
#      XPACK_MONITORING_ELASTICSEARCH_HOSTS: "host.docker.internal:9200"
#      XPACK_MONITORING_ENABLED: "true"
#    volumes:
#      - "./pipeline:/usr/share/logstash/pipeline"
#    restart: unless-stopped
#    depends_on:
#      - elasticsearch
#
#  # https://www.elastic.co/guide/en/kibana/current/docker.html
#  kibana:
#    image: kibana:7.14.2
#    environment:
#      ELASTICSEARCH_USERNAME: elastic
#      ELASTICSEARCH_PASSWORD: elastic
#      # Because Elasticsearch is running in a containerized environment
#      # (setting this to false will result in CPU stats not being correct in the Monitoring UI):
#      XPACK_MONITORING_UI_CONTAINER_ELASTICSEARCH_ENABLED: "true"
#    ports:
#      - "5601:5601"
#    restart: unless-stopped
#    depends_on:
#      - elasticsearch
#      - logstash

volumes:
  zookeeper-volume:
  kafka-volume:
